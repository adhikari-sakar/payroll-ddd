openapi: 3.0.9
info:
  title: Employee API
  description: Clusus Employee API
  contact:
    email: vega@progressoft.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
security:
  - OAuth2: []
paths:
  /app/v1/employee/register:
    post:
      tags:
        - EmployeeRegistration
      summary: employee registration request
      operationId: registerEmployee
      security:
        - OAuth2:
            - scope_register_employee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRegistrationRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViolationResponse'
        '401':
          description: Unauthorized
        '403':
          description: Access token not found or  does not have the required scope
        '404':
          description: Not Found

components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: ""
          scopes:
            scope_register_employee: Register New Employee
  schemas:
    EmployeeRegistrationRequest:
      type: object
      properties:
        employeeCode:
          type: string
          example: 'u570'
        firstName:
          type: string
          example: 'Sakar'
        middleName:
          type: string
          example: ''
        lastName:
          type: string
          example: 'Adhikari'
        email:
          type: string
          example: 'sakar.adhikari@clusus.com'
        primaryContact:
          type: string
          example: '9812233123'
        secondaryContact:
          type: string
          example: '9812233124'
        currentAddress:
          type: string
          example: 'Baneshor, Kathmandu'
        permanentAddress:
          type: string
          example: 'Ratnanager-03, Chitwan'
        bloodGroup:
          type: string
          example: 'A-'
        joinedDate:
          type: string
          example: '2020-03-06'
        role:
          type: object
          properties:
            name:
              type: string
              example: 'Developer'
        team:
          type: object
          properties:
            name:
              type: string
              example: 'Vega'
        department:
          type: object
          properties:
            name:
              type: string
              example: 'RND'
      required:
        - employeeCode
        - firstName
        - lastName
        - email
        - primaryContact
        - secondaryContact
        - currentAddress
        - joinedDate
        - role
        - team
        - department
    CommonResponse:
      type: object
      properties:
        requestId:
          type: string
          example: '22'
        status:
          type: string
          example: 'CREATED'
        uuid:
          type: string
          example: 'f03a505d-0b5f-449d-9564-d00a8605aff4'
          format: udid
      required:
        - requestId
        - status
        - uuid
    ViolationResponse:
      type: array
      items:
        properties:
          property:
            type: string
            example: requestId
          message:
            type: string
            example: 'This is required'

